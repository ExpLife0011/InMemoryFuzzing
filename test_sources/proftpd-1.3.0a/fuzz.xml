<Fuzz>
  <Include>config_paths.xml</Include>
 <!-- <RemoteControl>
    <Host>localhost</Host>
    <Port>8899</Port>
    
    <Exec trigger="immediate">
      <Cmd>{[gdbserver_exec]}</Cmd>		
      <Arg>- -wrapper</Arg>
      <Arg>env</Arg>
      <Arg>LD_PRELOAD={[lib_logmem]}</Arg>
      <Arg>LOG_MEM_PIPE=logmem_pipe</Arg>
      <Arg> - -</Arg>
      <Arg>:1234</Arg>
      <Arg>{[test_source_root]}gif2png</Arg>
      <Arg>DUMMYARGUMENT</Arg>
    </Exec>
  </RemoteControl>-->

  <TargetConnection>
    <Connector>general/gdb</Connector>
    <Config key="gdb_exec">{[gdb_exec]}</Config>
    <Config key="gdb_log">stream:stderr</Config>
    <Config key="target">extended-remote localhost:1234</Config>

    <Config key="file">{[test_source_root]}proftpd</Config>
  </TargetConnection>


  <!-- Some Fuzzer types can only be instantiated once and need to be used as PreCondition AND as a
       FuzzLocation afterwards.
       Define the Fuzzers here, name them and use them as pre condition and fuzz location
    -->
  <DefineFuzzer>
    <Id>proftpd_socket</Id>
    <FuzzerType>fuzzer/unix_socket</FuzzerType>
    <FuzzerArg name="socket_file">/opt/proftpd-1.3.0a-vulnerable/var/proftpd/proftpd.sock</FuzzerArg>
    <FuzzerArg name="enable_scripting">1</FuzzerArg>
    <FuzzerArg name="script_file">/path/to/scriptfile</FuzzerArg>
    <FuzzerArg name="script_code">
	Console.WriteLine("Test");
    </FuzzerArg>
  </DefineFuzzer>

  <!-- Tries to send some data to the victim regardless of the position, to reach the
       start of the area of interest and the end. It can be seen as a test run.
      
       It has quite the same structure than a Fuzz Location, but the pre condition is only invoked once.

       Multiple PreCondition can be specified, they are invoked in the same order as they appear in the 
       configuration file.
    -->
  <PreCondition>
    <FuzzerType>fuzz_helper/delay</FuzzerType>
    <Delay>2000</Delay>
  </PreCondition>
  <PreCondition>
    <FuzzerType>fuzzer/predefined</FuzzerType>
    <FuzzerArg name="id">proftpd_socket</FuzzerArg>

    <DataGenerator>datagen/fixed_bytes</DataGenerator>
    <DataGenArg name="data">000000000100000064000000</DataGenArg>
  </PreCondition>
  <PreCondition>
    <FuzzerType>fuzzer/predefined</FuzzerType>
    <FuzzerArg name="id">proftpd_socket</FuzzerArg>

    <DataGenerator>datagen/random_bytes</DataGenerator>
    <DataGenArg name="minlen">100</DataGenArg>
    <DataGenArg name="maxlen">100</DataGenArg>
    <DataGenArg name="type">PrintableASCIINullTerminated</DataGenArg>
  </PreCondition>


  <FuzzDescription>
    <RegionStart>source|ctrls.c,507</RegionStart>
    <RegionEnd>source|ctrls.c,542</RegionEnd>

    <FuzzLocation>
      <Trigger>start</Trigger>
      <StopCondition>none</StopCondition>
      <FuzzerType>fuzzer/predefined</FuzzerType>
      <FuzzerArg name="id">proftpd_socket</FuzzerArg>

      <DataGenerator>datagen/random_bytes</DataGenerator>
      <DataGenArg name="minlen">2000</DataGenArg>
      <DataGenArg name="maxlen">30000</DataGenArg>
      <DataGenArg name="lentype">increase|1000</DataGenArg>
      <DataGenArg name="type">PrintableASCIINullTerminated</DataGenArg>
      
    </FuzzLocation>
  </FuzzDescription>

  <Logger>
    <Destination>{[log_root]}</Destination>
    <UseLogger name="datagenlogger" />
    <UseLogger name="connectorlogger" />
    <UseLogger name="stackframelogger" />
    <UseLogger name="remotepipelogger">
      <PipeName>logmem_pipe</PipeName>
    </UseLogger>
  </Logger>
</Fuzz>
